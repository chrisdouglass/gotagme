!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common"],e):e(t["ngx-masonry"]={},t.ng.core,t.ng.common)}(this,function(t,n,o){"use strict";var r=undefined,i=undefined,e=function(){function t(t,e){this.platformId=t,this._element=e,this.useImagesLoaded=!1,this.updateLayout=!1,this.layoutComplete=new n.EventEmitter,this.removeComplete=new n.EventEmitter}return t.prototype.ngOnInit=function(){var e=this;this.useImagesLoaded&&r===undefined&&(r=require("imagesloaded")),o.isPlatformBrowser(this.platformId)&&i===undefined&&(i=require("masonry-layout")),this.options||(this.options={}),this.options.itemSelector||(this.options.itemSelector="[ngx-masonry-item], ngx-masonry-item"),o.isPlatformBrowser(this.platformId)&&(this._msnry=new i(this._element.nativeElement,this.options),this._msnry.on("layoutComplete",function(t){e.layoutComplete.emit(t)}),this._msnry.on("removeComplete",function(t){e.removeComplete.emit(t)}))},t.prototype.ngOnChanges=function(t){t.updateLayout&&(t.updateLayout.firstChange||this.layout())},t.prototype.ngOnDestroy=function(){this._msnry&&this._msnry.destroy()},t.prototype.layout=function(){var t=this;setTimeout(function(){t._msnry.layout()})},t.prototype.reloadItems=function(){var t=this;setTimeout(function(){t._msnry.reloadItems()})},t.prototype.add=function(e){var n=this,o=!1;0===this._msnry.items.length&&(o=!0),this.useImagesLoaded?(r(e,function(t){n._element.nativeElement.appendChild(e),n._msnry.appended(e),o&&n.layout()}),this._element.nativeElement.removeChild(e)):(this._msnry.appended(e),o&&this.layout())},t.prototype.remove=function(t){this._msnry.remove(t),this.layout()},t}();e.decorators=[{type:n.Component,args:[{selector:"[ngx-masonry], ngx-masonry",template:"<ng-content></ng-content>",styles:["\n\t\t:host {\n\t\t\tdisplay: block;\n\t\t}\n\t"]}]}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:n.Inject,args:[n.PLATFORM_ID]}]},{type:n.ElementRef}]},e.propDecorators={options:[{type:n.Input}],useImagesLoaded:[{type:n.Input}],updateLayout:[{type:n.Input}],layoutComplete:[{type:n.Output}],removeComplete:[{type:n.Output}]};var s=function(){function t(t,e,n){this._element=t,this._parent=e,this.platformId=n}return t.prototype.ngAfterViewInit=function(){o.isPlatformBrowser(this.platformId)&&(this._parent.add(this._element.nativeElement),this.watchForHtmlChanges())},t.prototype.ngOnDestroy=function(){o.isPlatformBrowser(this.platformId)&&this._parent.remove(this._element.nativeElement)},t.prototype.watchForHtmlChanges=function(){if(MutationObserver=window.MutationObserver||window.WebKitMutationObserver,MutationObserver){var n=this;new MutationObserver(function(t,e){n._parent.layout()}).observe(this._element.nativeElement,{subtree:!0,childList:!0})}},t}();s.decorators=[{type:n.Directive,args:[{selector:"[ngx-masonry-item], ngx-masonry-item"}]}],s.ctorParameters=function(){return[{type:n.ElementRef},{type:e,decorators:[{type:n.Inject,args:[n.forwardRef(function(){return e})]}]},{type:undefined,decorators:[{type:n.Inject,args:[n.PLATFORM_ID]}]}]};var a=function(){};a.decorators=[{type:n.NgModule,args:[{imports:[o.CommonModule],exports:[e,s],declarations:[e,s]}]}],a.ctorParameters=function(){return[]},t.NgxMasonryModule=a,t.NgxMasonryComponent=e,t.NgxMasonryDirective=s,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-masonry.umd.min.js.map
